buildscript {
    repositories {
        jcenter()
    }
    
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:5.0.0"
    }
}

plugins {
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: "com.github.johnrengelman.shadow"

group 'tv.z85'
version '0.0.1'
mainClassName = "io.ktor.server.netty.EngineMain"

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src/main']
    test.kotlin.srcDirs = test.java.srcDirs = ['src/test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation("io.ktor:ktor-serialization:$ktor_version")
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-server-host-common:$ktor_version"
    implementation "io.ktor:ktor-metrics:$ktor_version"
    implementation "io.ktor:ktor-auth:$ktor_version"
    implementation "io.ktor:ktor-locations:$ktor_version"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-html-builder:$ktor_version"
    implementation "io.ktor:ktor-client-core-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-jetty:$ktor_version"
    implementation "io.ktor:ktor-client-apache:$ktor_version"
    implementation "io.ktor:ktor-client-gson:$ktor_version"
    implementation "io.ktor:ktor-client-serialization:$ktor_version"

    implementation("org.jetbrains.kotlinx:kotlinx-html-jvm:0.7.2")

    implementation "org.koin:koin-ktor:2.2.2"

    implementation "org.litote.kmongo:kmongo-coroutine-serialization:4.2.3"

    implementation "com.charleskorn.kaml:kaml:0.26.0"

    implementation "org.yaml:snakeyaml:1.21"

    implementation project(":api-client")

    testImplementation "io.ktor:ktor-server-tests:$ktor_version"

    testImplementation "org.spekframework.spek2:spek-dsl-jvm:$spek_version"

    testRuntimeOnly "org.spekframework.spek2:spek-runner-junit5:$spek_version"

    // spek requires kotlin-reflect, can be omitted if already in the classpath
    testRuntimeOnly "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

shadowJar {
    baseName = 'my-application'
    classifier = null
    version = null
}

// setup the test task
test {
    useJUnitPlatform {
        includeEngines 'spek2'
    }
}