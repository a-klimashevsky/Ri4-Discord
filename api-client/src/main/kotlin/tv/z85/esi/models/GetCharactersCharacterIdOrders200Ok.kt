/**
* EVE Swagger Interface
* An OpenAPI for EVE Online
*
* The version of the OpenAPI document: 1.7.2
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package tv.z85.esi.models


import com.squareup.moshi.Json
/**
 * 200 ok object
 * @param duration Number of days for which order is valid (starting from the issued date). An order expires at time issued + duration
 * @param escrow For buy orders, the amount of ISK in escrow
 * @param isBuyOrder True if the order is a bid (buy) order
 * @param isCorporation Signifies whether the buy/sell order was placed on behalf of a corporation.
 * @param issued Date and time when this order was issued
 * @param locationId ID of the location where order was placed
 * @param minVolume For buy orders, the minimum quantity that will be accepted in a matching sell order
 * @param orderId Unique order ID
 * @param price Cost per unit for this order
 * @param range Valid order range, numbers are ranges in jumps
 * @param regionId ID of the region where order was placed
 * @param typeId The type ID of the item transacted in this order
 * @param volumeRemain Quantity of items still required or offered
 * @param volumeTotal Quantity of items required or offered at time order was placed
 */

data class GetCharactersCharacterIdOrders200Ok (
    /* Number of days for which order is valid (starting from the issued date). An order expires at time issued + duration */
    @Json(name = "duration")
    var duration: kotlin.Int,
    /* For buy orders, the amount of ISK in escrow */
    @Json(name = "escrow")
    var escrow: kotlin.Double? = null,
    /* True if the order is a bid (buy) order */
    @Json(name = "is_buy_order")
    var isBuyOrder: kotlin.Boolean? = null,
    /* Signifies whether the buy/sell order was placed on behalf of a corporation. */
    @Json(name = "is_corporation")
    var isCorporation: kotlin.Boolean,
    /* Date and time when this order was issued */
    @Json(name = "issued")
    var issued: java.time.OffsetDateTime,
    /* ID of the location where order was placed */
    @Json(name = "location_id")
    var locationId: kotlin.Long,
    /* For buy orders, the minimum quantity that will be accepted in a matching sell order */
    @Json(name = "min_volume")
    var minVolume: kotlin.Int? = null,
    /* Unique order ID */
    @Json(name = "order_id")
    var orderId: kotlin.Long,
    /* Cost per unit for this order */
    @Json(name = "price")
    var price: kotlin.Double,
    /* Valid order range, numbers are ranges in jumps */
    @Json(name = "range")
    var range: GetCharactersCharacterIdOrders200Ok.Range,
    /* ID of the region where order was placed */
    @Json(name = "region_id")
    var regionId: kotlin.Int,
    /* The type ID of the item transacted in this order */
    @Json(name = "type_id")
    var typeId: kotlin.Int,
    /* Quantity of items still required or offered */
    @Json(name = "volume_remain")
    var volumeRemain: kotlin.Int,
    /* Quantity of items required or offered at time order was placed */
    @Json(name = "volume_total")
    var volumeTotal: kotlin.Int
) {

    /**
    * Valid order range, numbers are ranges in jumps
    * Values: _1,_10,_2,_20,_3,_30,_4,_40,_5,region,solarsystem,station
    */
    
    enum class Range(val value: kotlin.String){
        @Json(name = "1") _1("1"),
        @Json(name = "10") _10("10"),
        @Json(name = "2") _2("2"),
        @Json(name = "20") _20("20"),
        @Json(name = "3") _3("3"),
        @Json(name = "30") _30("30"),
        @Json(name = "4") _4("4"),
        @Json(name = "40") _40("40"),
        @Json(name = "5") _5("5"),
        @Json(name = "region") region("region"),
        @Json(name = "solarsystem") solarsystem("solarsystem"),
        @Json(name = "station") station("station");
    }
}

