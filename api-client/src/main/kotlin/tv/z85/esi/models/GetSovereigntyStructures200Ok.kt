/**
* EVE Swagger Interface
* An OpenAPI for EVE Online
*
* The version of the OpenAPI document: 1.7.2
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package tv.z85.esi.models


import com.squareup.moshi.Json
/**
 * 200 ok object
 * @param allianceId The alliance that owns the structure. 
 * @param solarSystemId Solar system in which the structure is located. 
 * @param structureId Unique item ID for this structure.
 * @param structureTypeId A reference to the type of structure this is. 
 * @param vulnerabilityOccupancyLevel The occupancy level for the next or current vulnerability window. This takes into account all development indexes and capital system bonuses. Also known as Activity Defense Multiplier from in the client. It increases the time that attackers must spend using their entosis links on the structure. 
 * @param vulnerableEndTime The time at which the next or current vulnerability window ends. At the end of a vulnerability window the next window is recalculated and locked in along with the vulnerabilityOccupancyLevel. If the structure is not in 100% entosis control of the defender, it will go in to 'overtime' and stay vulnerable for as long as that situation persists. Only once the defenders have 100% entosis control and has the vulnerableEndTime passed does the vulnerability interval expire and a new one is calculated. 
 * @param vulnerableStartTime The next time at which the structure will become vulnerable. Or the start time of the current window if current time is between this and vulnerableEndTime. 
 */

data class GetSovereigntyStructures200Ok (
    /* The alliance that owns the structure.  */
    @Json(name = "alliance_id")
    var allianceId: kotlin.Int,
    /* Solar system in which the structure is located.  */
    @Json(name = "solar_system_id")
    var solarSystemId: kotlin.Int,
    /* Unique item ID for this structure. */
    @Json(name = "structure_id")
    var structureId: kotlin.Long,
    /* A reference to the type of structure this is.  */
    @Json(name = "structure_type_id")
    var structureTypeId: kotlin.Int,
    /* The occupancy level for the next or current vulnerability window. This takes into account all development indexes and capital system bonuses. Also known as Activity Defense Multiplier from in the client. It increases the time that attackers must spend using their entosis links on the structure.  */
    @Json(name = "vulnerability_occupancy_level")
    var vulnerabilityOccupancyLevel: kotlin.Float? = null,
    /* The time at which the next or current vulnerability window ends. At the end of a vulnerability window the next window is recalculated and locked in along with the vulnerabilityOccupancyLevel. If the structure is not in 100% entosis control of the defender, it will go in to 'overtime' and stay vulnerable for as long as that situation persists. Only once the defenders have 100% entosis control and has the vulnerableEndTime passed does the vulnerability interval expire and a new one is calculated.  */
    @Json(name = "vulnerable_end_time")
    var vulnerableEndTime: java.time.OffsetDateTime? = null,
    /* The next time at which the structure will become vulnerable. Or the start time of the current window if current time is between this and vulnerableEndTime.  */
    @Json(name = "vulnerable_start_time")
    var vulnerableStartTime: java.time.OffsetDateTime? = null
)

